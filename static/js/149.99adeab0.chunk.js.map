{"version":3,"file":"static/js/149.99adeab0.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import {useMemo, memo, useState, useTransition, useDeferredValue} from \"react\";\r\nimport React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {addCount} from './../store.js';\r\nimport { increase, changeName} from './../store/userSlice.js';\r\n\r\n\r\n\r\n/* let Child = memo(function(){ //꼭 필요할 때만 재렌더링하려면 memo\r\n    console.log('재렌더링됨')\r\n    return (<div>자식임</div>)\r\n})\r\n */\r\n\r\n\r\nfunction 함수(){\r\n    return '반복문 10억번 돌린 결과'\r\n}\r\n//let test = new Array(10000).fill(0)\r\nlet test = new Array(100).fill(0)\r\n\r\nfunction Cart() {\r\n\r\n    let state = useSelector((state)=>{ return state })//return state.user 이경우 user state 만 가져옴\r\n    // ((state)=>state.user )  이렇게 생략가능\r\n    //console.log(state.user)\r\n    //console.log(state)\r\n    //console.log(state.stock)\r\n    //console.log(state.cart)\r\n    let dispatch = useDispatch() // store.js로 요청보내주는 함수\r\n    let [count, setCount] = useState(0)\r\n\r\n    let result = useMemo(()=>{ return 함수()}, [state]);\r\n    //렌더링 될때 실행됨 , useEffect와 실행시점만 차이가 있음\r\n    let [name, setName] = useState('')\r\n    let [isPending, startTransition] = useTransition()//startTransition = 늦게처리\r\n//isPending 은 startTransition이 처리중일 때 true로 변함 \r\n\r\nlet state2 = useDeferredValue(name)\r\n\r\n    return (\r\n        <div>\r\n            <input onChange={(e)=>{\r\n                startTransition(()=>{\r\n                    setName(e.target.value)\r\n                })\r\n               }\r\n            } />\r\n            {\r\n                isPending ? '로딩중' : \r\n                test.map((a,i)=>{\r\n                    return (<div key={i}>{/* {name} */}{state2}</div>)\r\n                })\r\n            }\r\n\r\n            {/* <Child count={count}></Child>\r\n            <button onClick={()=>{setCount(count+1)}}>+</button> */}\r\n\r\n            <h6>{state.user.name} {state.user.age}의 장바구니</h6>\r\n            <button onClick={()=>{\r\n                \r\n                dispatch(changeName())//changeName()실행해달라고 store.js에 부탁\r\n            }}>버튼</button>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>상품명</th>\r\n                            <th>수량</th>\r\n                            <th>변경하기</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            state.cart.map((a, i)=>{\r\n                                return (\r\n                                <tr key={i}>\r\n                                    <td>{state.cart[i].id}</td>\r\n                                    <td>{state.cart[i].name}</td>\r\n                                    <td>{state.cart[i].count}</td>\r\n                                    <td>\r\n                                        <button onClick={()=>{\r\n                                            dispatch(addCount(state.cart[i].id))//지금 액션이 들어온 id를 찾아서 값을 올려줘야하기에 payload로 아이디를 적어줘야 함\r\n                                        // dispatch(addCount(i))\r\n                                            //cf)dispatch : 메세지보내다 뜻\r\n                                        }}>+</button>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    \r\n                    \r\n                    </tbody>\r\n                </Table> \r\n        </div>\r\n    )\r\n}\r\nexport default Cart\r\n"],"names":["React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","test","Array","fill","state","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","_useState3","useMemo","_useState4","name","setName","_useTransition","useTransition","_useTransition2","isPending","startTransition","state2","useDeferredValue","_jsxs","onChange","e","target","value","map","a","i","user","age","onClick","changeName","Table","cart","id","count","addCount"],"sourceRoot":""}