{"version":3,"file":"static/js/768.b147da55.chunk.js","mappings":"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","sources":["routes/Detail.js"],"sourcesContent":["\r\nimport React, {useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Nav} from 'react-bootstrap';\r\nimport {Context1} from './../App.js';\r\nimport {addItem} from './../store.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n  function Detail(props){\r\n\r\n  //let {stock} = useContext(Context1);\r\n    \r\n    let {id} = useParams();\r\n    let findItem = props.shoes.find((x)=>{\r\n      return x.id == id;\r\n    })\r\n\r\n    let [timer, setTimer] = useState(true);\r\n    //let [count, setCount] = useState(0);\r\n    let [num, setNum] = useState(false);\r\n    let [tab, setTab] = useState(0);\r\n\r\n    let state = useSelector((state)=>{ return state })\r\n    let dispatch = useDispatch()\r\n    //넘겨준 데이터의 id를 기준으로 페이지가 생성되어야 하기에 요청데이터는 id이고 이걸 usePrams로 받은 것\r\n\r\n/*\r\n    useEffect(()=>{\r\n      //누가 detail 페이지 접속하면\r\n      //그 페이지에 보이는 상품id 가져와서\r\n      // localStorage에 watched 항목에 추가\r\n      //console.log(findItem)\r\n\r\n      //localStorage.setItem('watched',[findItem.id])\r\n      let 꺼낸거 = localStorage.getItem('watched');\r\n      꺼낸거 = JSON.parse(꺼낸거)\r\n      꺼낸거.push(findItem.id);//<- 이미 있으면 push() 하지마라\r\n\r\n      //set으로 바꿨다가 다시 array로 만들기\r\n      꺼낸거 = new Set(꺼낸거)\r\n      꺼낸거 = Array.from(꺼낸거)\r\n\r\n      localStorage.setItem('watched', JSON.stringify(꺼낸거))\r\n\r\n    },[])\r\n\r\n*/\r\n  //현재 상세페이지의 id값을 저장해둠\r\n  //console.log(findItem.id)\r\n  //let itemId = findItem.id\r\n  //localStorage.setItem('상품이름', itemId);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n    if(isNaN(num) == true){\r\n      alert('숫자로 입력해주세요')\r\n    }\r\n    },[num])//num 이 변경시에만 실행하려면\r\n\r\n    useEffect(()=>{\r\n    let a = setTimeout(()=>{setTimer(false)},2000)\r\n    //console.log(2);\r\n    return()=>{\r\n      //console.log(1);\r\n      clearTimeout(a);\r\n      }\r\n    }, [])\r\n\r\n    let [fade, setFade] = useState('');\r\n    //let {stock} = useContext(Context1);\r\n    useEffect(()=>{\r\n      setTimeout(()=>{setFade('end')}, 100)\r\n\r\n      return ()=>{\r\n        setFade('')\r\n      }\r\n    },[tab])\r\n\r\n    let [fade2, setFade2] = useState('');\r\n    useEffect(()=>{\r\n      setTimeout(()=>{setFade2('end')}, 100)\r\n\r\n      return ()=>{\r\n        setFade2('')\r\n      }\r\n    },[])\r\n\r\n\r\n      return(\r\n        <div className={\"container start \" + fade2 }>\r\n\r\n          {\r\n            timer == true ? <Timer></Timer> : null\r\n          }\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <img src={'https://codingapple1.github.io/shop/shoes'+ (findItem.id + 1) +'.jpg' } width=\"100%\" />\r\n              \r\n            </div>\r\n      \r\n            <div className=\"col-md-6 mt-4\">\r\n              <h4 className=\"pt-5\">{findItem.title}</h4>\r\n              <p>{findItem.content}</p>\r\n              <p>{findItem.price}원</p>\r\n              <button className=\"btn btn-danger\" onClick={()=>{\r\n                //dispatch(addItem({id :3, name : 'kimmi', count : 1}))\r\n                //dispatch(addItem())\r\n                dispatch(addItem({id :3, name : 'kimmi', count : 1}))\r\n              }}\r\n              >주문하기</button> \r\n            </div>\r\n          </div>\r\n\r\n          <Nav variant=\"tabs\"  defaultActiveKey=\"link0\">\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link0\" onClick={()=>{\r\n                  setTab(0)\r\n                }\r\n              }>버튼0</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link1\" onClick={()=>{\r\n                  setTab(1)\r\n                } }>버튼1</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link2\" onClick={()=>{\r\n                  setTab(2)\r\n                } }>버튼2 </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n    {/*       {\r\n            tab == 0 ?  <div>내용0</div> : null\r\n          }\r\n          {\r\n            tab == 1 ?  <div>내용1</div> : null\r\n          }\r\n          {\r\n            tab == 2 ?  <div>내용2</div> : null\r\n          }\r\n          */}\r\n\r\n\r\n          {/* <input onChange={(e)=>{setNum(e.target.value)}}></input>\r\n          <button className=\"btnNum\" onClick={()=>{setCount(count+1)}}>수량버튼</button>\r\n          {count} */}\r\n\r\n          <div className={'start ' + fade}>\r\n            <TabContent tab={tab}/>\r\n          </div>\r\n          \r\n\r\n        </div> \r\n\r\n      )\r\n  }\r\n\r\n\r\n  function TabContent({tab}){\r\n    if(tab == 0)\r\n    {\r\n      return <div>내용0</div>\r\n    }\r\n    if(tab == 1){\r\n      return <div>내용2</div>\r\n    }\r\n    if(tab == 2){\r\n      return <div>내용3</div>\r\n    }\r\n  }\r\n \r\n\r\n/*\r\n  function TabContent(props){\r\n    if(props.tab == 0){\r\n      return <div>내용0</div>\r\n    }\r\n    if(props.tab == 1){\r\n      return <div>내용1</div>\r\n  \r\n    }\r\n    if(props.tab == 2){\r\n      return <div>내용2</div>\r\n    }\r\n  }\r\n*/\r\n//props를 쓰지 않고 상속시에는 아래처럼 가능\r\n/*\r\n   function TabContent({tab}){\r\n    if(tab == 0)\r\n    {\r\n      return <div>내용0</div>\r\n    }\r\n    if(tab == 1){\r\n      return <div>내용2</div>\r\n    }\r\n    if(tab == 2){\r\n      return <div>내용3</div>\r\n    }\r\n\r\n  }\r\n*/\r\n/*\r\n function TabContent({tab}){ \r\n  return ( \r\n    <div className={'start ' + fade}>\r\n      {[<div>내용0</div>, <div>내용1</div>, <div>내용2</div>][tab]}\r\n    </div>\r\n  )\r\n }\r\n*/\r\n\r\n\r\n  function Timer(){\r\n    return(\r\n      <div className=\"alert alert-warning\">\r\n        2초이내 구매시 할인\r\n      </div>\r\n    )\r\n    \r\n  }\r\n  export default Detail;"],"names":["TabContent","_ref","tab","_jsx","children","Timer","className","props","id","useParams","findItem","shoes","find","x","_useState","useState","_useState2","_slicedToArray","timer","setTimer","_useState3","_useState4","num","_useState5","_useState6","setTab","dispatch","useSelector","state","useDispatch","useEffect","isNaN","alert","a","setTimeout","clearTimeout","_useState7","_useState8","fade","setFade","_useState9","_useState10","fade2","setFade2","_jsxs","src","width","title","content","price","onClick","addItem","name","count","Nav","variant","defaultActiveKey","eventKey"],"sourceRoot":""}